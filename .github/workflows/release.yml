name: Manual Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (e.g., v1.0.0)"
        required: true
      name:
        description: "Optional release title (leave empty to use tag)"
        required: false
      prerelease:
        description: "Mark as pre-release?"
        type: boolean
        default: false
      draft:
        description: "Create as draft?"
        type: boolean
        default: false
      generate_notes:
        description: "Auto-generate release notes?"
        type: boolean
        default: true

permissions:
  contents: read

concurrency:
  group: manual-release-${{ github.ref }}
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build-wheels:
    name: Build wheels (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BUILD: "cp311-* cp312-* cp313-*"
      CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Set up Python (driver)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel

      - name: Build wheels (cp311â€“cp313)
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl
          if-no-files-found: error
          retention-days: 7
          compression-level: 6

  build-sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Build sdist
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          if-no-files-found: error
          retention-days: 7
          compression-level: 6

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-wheels, build-sdist]
    permissions:
      contents: write
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: release_artifacts

      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: release_artifacts

      - name: Show artifacts
        run: ls -lh release_artifacts

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          name: ${{ inputs.name || inputs.tag }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          generate_release_notes: ${{ inputs.generate_notes }}
          files: release_artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
